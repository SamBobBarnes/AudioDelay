name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build and publish
        run: |
          dotnet publish -c Release --self-contained true --runtime win-x64 -p:PublishSingleFile=true -o ./publish/win-x64
#          dotnet publish -c Release --self-contained true --runtime win-arm64 -p:PublishSingleFile=true -o ./publish/win-arm64
#          dotnet publish -c Release --self-contained true --runtime linux-x64 -p:PublishSingleFile=true -o ./publish/linux-x64
#          dotnet publish -c Release --self-contained true --runtime linux-arm64 -p:PublishSingleFile=true -o ./publish/linux-arm64
#          dotnet publish -c Release --self-contained true --runtime osx-x64 -p:PublishSingleFile=true -o ./publish/osx-x64
#          dotnet publish -c Release --self-contained true --runtime osx-arm64 -p:PublishSingleFile=true -o ./publish/osx-arm64
        working-directory: ./AudioDelay

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AudioDelay
          path: ./AudioDelay/publish

  release:
    permissions: write-all
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: AudioDelay
          path: ./AudioDelay

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
          
  upload-artifacts:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [win-x64, win-arm64, linux-x64, linux-arm64, osx-x64, osx-arm64]

    steps:
      - name: Add artifacts to release ${{ matrix.os }}
        if: ${{ matrix.os == 'win-x64' || matrix.os == 'win-arm64' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ jobs.release.create_release.outputs.upload_url }}
          asset_path: ./AudioDelay/${{ matrix.os }}/AudioDelay.exe
          asset_name: AudioDelay-${{ matrix.os }}.exe
          asset_content_type: application/octet-stream
          
      - name: Add artifacts to release ${{ matrix.os }}
        if: ${{ matrix.os == 'linux-x64' || matrix.os == 'linux-arm64' || matrix.os == 'osx-x64' || matrix.os == 'osx-arm64' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ jobs.release.create_release.outputs.upload_url }}
          asset_path: ./AudioDelay/${{ matrix.os }}/AudioDelay
          asset_name: AudioDelay-${{ matrix.os }}
          asset_content_type: application/octet-stream