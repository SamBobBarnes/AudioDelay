name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build and publish
        run: |
          dotnet publish -c Release --self-contained true --runtime win-x64 -p:PublishSingleFile=true -o ./publish/win-x64
          dotnet publish -c Release --self-contained true --runtime win-arm64 -p:PublishSingleFile=true -o ./publish/win-arm64
          dotnet publish -c Release --self-contained true --runtime linux-x64 -p:PublishSingleFile=true -o ./publish/linux-x64
          dotnet publish -c Release --self-contained true --runtime linux-arm64 -p:PublishSingleFile=true -o ./publish/linux-arm64
          dotnet publish -c Release --self-contained true --runtime osx-x64 -p:PublishSingleFile=true -o ./publish/osx-x64
          dotnet publish -c Release --self-contained true --runtime osx-arm64 -p:PublishSingleFile=true -o ./publish/osx-arm64
        working-directory: ./AudioDelay

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AudioDelay
          path: ./AudioDelay/publish

  release:
    permissions: write-all
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: AudioDelay
          path: ./AudioDelay
          
      - run: ls ./AudioDelay

#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.PAT }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: true
#          prerelease: false
#
#      - name: Add artifacts to release win-x64
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.PAT }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./AudioDelay/publish/win-x64/AudioDelay.exe
#          asset_name: AudioDelay-win-x64.exe
#          asset_content_type: application/octet-stream
#          
#      - name: Add artifacts to release win-arm64
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.PAT }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./AudioDelay/publish/win-arm64/AudioDelay.exe
#          asset_name: AudioDelay-win-arm64.exe
#          asset_content_type: application/octet-stream
#        
#      - name: Add artifacts to release linux-x64
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.PAT }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./AudioDelay/publish/linux-x64/AudioDelay
#          asset_name: AudioDelay-linux-x64
#          asset_content_type: application/octet-stream
#          
#      - name: Add artifacts to release linux-arm64
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.PAT }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./AudioDelay/publish/linux-arm64/AudioDelay
#          asset_name: AudioDelay-linux-arm64
#          asset_content_type: application/octet-stream
#        
#      - name: Add artifacts to release osx-x64
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.PAT }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./AudioDelay/publish/osx-x64/AudioDelay
#          asset_name: AudioDelay-osx-x64
#          asset_content_type: application/octet-stream
#          
#      - name: Add artifacts to release osx-arm64
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.PAT }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./AudioDelay/publish/osx-arm64/AudioDelay
#          asset_name: AudioDelay-osx-arm64
#          asset_content_type: application/octet-stream